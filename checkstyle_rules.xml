<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
        <property name="max" value="500"/>
    </module>
    <module name="LineLength">
        <property name="max" value="120"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="0"/>
            <property name="ignoreStatic" value="false"/>
            <property name="ignoreOverriddenMethods" value="false"/>
            <property
                name="allowedAbbreviations"
                value="CSV, XML, JSON, UML, AVG, ABS, APP, CNT, CMD, CMP, CONFIG,
                CTX, CURR, DIR, ID, IMPL, INFO, INIT, ITER, LEN, LIB, MAX, MIN,
                MOD, PARAM, PREV, REGEX, REGEXP, SRC, SUM, TMP, TEMP, VAL"/>
        </module>
        <module name="AbstractClassName"/>
        <module name="CatchParameterName"/>
        <module name="ClassTypeParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[TEKVSUVW]$"/>
        </module>
        <module name="ConstantName"/>
        <module name="IllegalIdentifierName"/>
        <module name="InterfaceTypeParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[TEKVSUVW]$"/>
        </module>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[TEKVSUVW]$"/>
        </module>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="PatternVariableName"/>
        <module name="RecordComponentName"/>
        <module name="RecordTypeParameterName">
            <property name="severity" value="warning"/>
            <property name="format" value="^[TEKVSUVW]$"/>
        </module>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_imports.html -->
        <module name="AvoidStarImport">
            <property name="severity" value="warning"/>
        </module>
        <module name="AvoidStaticImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="ImportOrder">
            <property name="separated" value="true"/>
        </module>
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="AnonInnerLength"/>
        <module name="LambdaBodyLength">
            <property name="max" value="20"/>
        </module>
        <module name="MethodCount">
            <property name="maxTotal" value="20"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="120"/>
            <property name="countEmpty" value="false"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="ParameterNumber"/>
        <module name="RecordComponentNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceBeforeCaseDefaultColon"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="SeparatorWrap"/>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Modifier Checks                                   -->
        <!-- See http://checkstyle.sf.net/config_modifier.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="ignore"/>
            <property name="commentFormat" value="This is expected"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="AvoidDoubleBraceInitialization"/>
        <module name="DeclarationOrder"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
        </module>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows">
            <property
                name="illegalClassNames"
                value="Error, Exception, RuntimeException, Throwable,
                java.lang.Error, java.lang.Exception, java.lang.RuntimeException,
                java.lang.Throwable"/>
        </module>
        <module name="IllegalType">
            <property
                name="illegalClassNames"
                value="HashMap, HashSet, LinkedHashMap, Hashtable,
                ArrayList, LinkedList, ConcurrentHashMap, Vector,
                LinkedHashSet, TreeMap, TreeSet, ArrayDeque,
                java.util.HashMap, java.util.HashSet, java.util.LinkedHashMap,
                java.util.Hashtable, java.util.ArrayList, java.util.LinkedList,
                java.util.concurrent.ConcurrentHashMap, java.util.Vector,
                java.util.LinkedHashSet, java.util.TreeMap, java.util.TreeSet,
                java.util.ArrayDeque"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="severity" value="warning"/>
        </module>
        <module name="MissingCtor">
            <property name="severity" value="info"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoArrayTrailingComma"/>
        <module name="NoEnumTrailingComma"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="RequireThis"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>
        <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>
        <module name="UnusedLocalVariable"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType">
            <property name="allowMarkerInterfaces" value="false"/>
        </module>
        <module name="MutableException"/>
        <module name="ThrowsCount"/>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
        </module>

        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="AvoidEscapedUnicodeCharacters"/>
        <module name="CommentsIndentation"/>
        <module name="Indentation"/>
        <module name="NoCodeInFile"/>
        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)|(todo)|(fixme)"/>
        </module>
        <module name="UpperEll"/>

    </module>

</module>
